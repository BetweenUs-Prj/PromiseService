{
	"info": {
		"_postman_id": "kakao-notification-test-collection",
		"name": "카카오톡 약속 알림 서비스 테스트",
		"description": "카카오톡 알림 기능의 다양한 시나리오를 테스트하기 위한 Postman 컬렉션\n\n이유: 카카오톡 알림 서비스가 정상적으로 작동하는지 확인하고, 오류 상황에서도 적절하게 처리되는지 검증하기 위해",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwtToken",
			"value": "eyJhbGciOiJIUzI1NiJ9...여기에_실제_토큰_입력",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "1",
			"type": "string"
		},
		{
			"key": "meetingId",
			"value": "1",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "1. 서버 상태 확인",
			"item": [
				{
					"name": "헬스 체크",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"서버가 정상 실행중\", function () {",
									"    var responseText = pm.response.text();",
									"    pm.expect(responseText).to.include(\"UP\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"health"
							]
						}
					}
				},
				{
					"name": "알림 서비스 상태 확인",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/notifications/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"health"
							]
						}
					}
				}
			]
		},
		{
			"name": "2. 카카오 알림 사용 가능 여부",
			"item": [
				{
					"name": "카카오 알림 가용성 확인",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has availability status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('available');",
									"    pm.expect(jsonData).to.have.property('hasConsent');",
									"    pm.expect(jsonData).to.have.property('hasKakaoInfo');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao/availability",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao",
								"availability"
							]
						}
					}
				}
			]
		},
		{
			"name": "3. 카카오톡 알림 전송 (정상 케이스)",
			"item": [
				{
					"name": "특정 수신자들에게 알림 전송",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData).to.have.property('sentCount');",
									"    pm.expect(jsonData).to.have.property('totalCount');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2, 3, 4]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "전체 참여자에게 알림 전송",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData).to.have.property('sentCount');",
									"    pm.expect(jsonData).to.have.property('totalCount');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}}\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "단일 수신자에게 알림 전송",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success status\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('success');",
									"    pm.expect(jsonData).to.have.property('sentCount');",
									"    pm.expect(jsonData).to.have.property('totalCount');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				}
			]
		},
		{
			"name": "4. 간단 테스트 엔드포인트",
			"item": [
				{
					"name": "카카오 간단 테스트",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao/test?meetingId={{meetingId}}&receiverIds=2,3,4",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao",
								"test"
							],
							"query": [
								{
									"key": "meetingId",
									"value": "{{meetingId}}"
								},
								{
									"key": "receiverIds",
									"value": "2,3,4"
								}
							]
						}
					}
				}
			]
		},
		{
			"name": "5. 오류 상황 테스트",
			"item": [
				{
					"name": "존재하지 않는 약속 ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 or response contains error\", function () {",
									"    pm.expect([400, 200]).to.include(pm.response.code);",
									"    if (pm.response.code === 200) {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.false;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": 99999,\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "빈 수신자 목록",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": []\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "수신자 수 제한 초과",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 or has validation error\", function () {",
									"    pm.expect([400, 200]).to.include(pm.response.code);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "필수 필드 누락 (meetingId 없음)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				}
			]
		},
		{
			"name": "6. 인증/인가 테스트",
			"item": [
				{
					"name": "JWT 토큰 없이 요청",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "사용자 ID 헤더 없이 요청",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				},
				{
					"name": "잘못된 JWT 토큰",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token_here",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				}
			]
		},
		{
			"name": "7. 동의 관련 테스트",
			"item": [
				{
					"name": "동의하지 않은 사용자로 테스트",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409 or has consent error\", function () {",
									"    pm.expect([409, 200]).to.include(pm.response.code);",
									"    if (pm.response.code === 200) {",
									"        var jsonData = pm.response.json();",
									"        pm.expect(jsonData.success).to.be.false;",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "999",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"meetingId\": {{meetingId}},\n  \"receiverIds\": [2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/notifications/kakao",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"notifications",
								"kakao"
							]
						}
					}
				}
			]
		},
		{
			"name": "8. 약속 관련 API (추가 참고용)",
			"item": [
				{
					"name": "약속 확정 및 알림 발송",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 or 403\", function () {",
									"    pm.expect([200, 403]).to.include(pm.response.code);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/appointments/{{meetingId}}/confirm",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"appointments",
								"{{meetingId}}",
								"confirm"
							]
						}
					}
				},
				{
					"name": "약속 초대 응답 (수락)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwtToken}}",
								"type": "text"
							},
							{
								"key": "X-User-ID",
								"value": "{{userId}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accept\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/appointments/{{meetingId}}/respond",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"appointments",
								"{{meetingId}}",
								"respond"
							]
						}
					}
				}
			]
		}
	]
}


