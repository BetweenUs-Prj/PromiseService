# 테스트 환경 설정
# 이유: 테스트 실행 시 별도의 데이터베이스 및 서비스 설정을 사용하여 운영 환경과 분리하기 위해

# H2 테스트 데이터베이스 설정 (통일된 단일 DB)
# 이유: 모든 테스트가 동일한 H2 인메모리 DB를 사용하여 데이터 충돌과 테이블 drop 오류를 방지하기 위해
spring.datasource.url=jdbc:h2:mem:unified_test_db;MODE=MySQL;DATABASE_TO_LOWER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Hikari 커넥션 풀 설정 최적화
# 이유: 테스트 환경에서 커넥션 풀 관련 오류를 방지하고 안정성을 높이기 위해
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA 설정 최적화
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=create-drop
spring.jpa.open-in-view=false

# SQL 초기화 비활성화 (JPA가 스키마 생성)
spring.sql.init.mode=never

# 기타 DB 관련 설정
# 이유: Flyway, Liquibase 등 외부 마이그레이션 도구를 비활성화하여 테스트 환경 단순화
spring.flyway.enabled=false
spring.liquibase.enabled=false

# 로그 레벨 설정
logging.level.org.springframework.web=DEBUG
logging.level.com.promiseservice=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# UserService Mock 설정 (테스트용)
userservice.base-url=http://localhost:8080
userservice.api.users=/api/users
userservice.api.profiles=/api/users/profiles

# NotificationService Mock 설정 (테스트용)
notificationservice.base-url=http://localhost:8083
notificationservice.api.send=/api/notifications/send

# Spring Boot Test 설정
spring.test.mockmvc.print=SYSTEM_OUT
